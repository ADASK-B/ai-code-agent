# Multi-stage Dockerfile for Orchestrator Development with Hot Reload
FROM mcr.microsoft.com/azure-functions/node:4-node20 AS base

# Install dumb-init for proper signal handling
RUN apt-get update && apt-get install -y dumb-init && rm -rf /var/lib/apt/lists/*

# Create app directory and user
WORKDIR /app
RUN groupadd -g 1001 nodejs && \
    useradd -r -u 1001 -g nodejs orchestrator

# =============================================================================
# Development Stage - with hot reload and debugging
# =============================================================================
FROM base AS development

# Install development tools
RUN apt-get update && apt-get install -y git curl && rm -rf /var/lib/apt/lists/*

# Install Azure Functions Core Tools globally
RUN npm install -g azure-functions-core-tools@4 --unsafe-perm true

# Enable Node.js debugging
ENV NODE_ENV=development
ENV AzureWebJobsScriptRoot=/app
ENV AzureFunctionsJobHost__Logging__Console__IsEnabled=true

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install ALL dependencies (including dev)
RUN npm ci && npm cache clean --force

# Create directories for volume mounts and Azure Functions with proper permissions
RUN mkdir -p src dist /home/.azurefunctions /home/data && \
    chown -R orchestrator:nodejs /app /home/.azurefunctions /home/data && \
    chmod -R 755 /home/data

# Copy Azure Functions configuration
COPY host.json ./
COPY local.settings.json.example ./local.settings.json

# Switch to non-root user
USER orchestrator

# Expose application port
EXPOSE 7071

# Use func start for hot reload
CMD ["dumb-init", "func", "start", "--typescript", "--cors", "*"]

# =============================================================================
# Production Build Stage
# =============================================================================
FROM base AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Install dev dependencies for build
RUN npm ci && npm cache clean --force

# Copy source code and config
COPY src/ ./src/
COPY host.json ./

# Build TypeScript
RUN npm run build

# =============================================================================
# Production Stage
# =============================================================================
FROM mcr.microsoft.com/azure-functions/node:4-node20 AS production

ENV AzureWebJobsScriptRoot=/home/site/wwwroot \
    AzureFunctionsJobHost__Logging__Console__IsEnabled=true

# Copy built application
COPY --from=builder --chown=app:app /app/dist /home/site/wwwroot
COPY --from=builder --chown=app:app /app/host.json /home/site/wwwroot/
COPY --from=builder --chown=app:app /app/package.json /home/site/wwwroot/
COPY --from=builder --chown=app:app /app/node_modules /home/site/wwwroot/node_modules

EXPOSE 80

CMD ["/azure-functions-host/Microsoft.Azure.WebJobs.Script.WebHost"]
