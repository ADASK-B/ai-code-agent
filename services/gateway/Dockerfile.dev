# Multi-stage Dockerfile for Development with Hot Reload
FROM node:20-alpine AS base

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create app directory and user
WORKDIR /app
RUN addgroup -g 1001 -S nodejs && \
    adduser -S gateway -u 1001

# =============================================================================
# Development Stage - with hot reload and debugging
# =============================================================================
FROM base AS development

# Install development tools
RUN apk add --no-cache git curl

# Enable Node.js debugging
ENV NODE_ENV=development
ENV NODE_OPTIONS="--inspect=0.0.0.0:9229"

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install ALL dependencies (including dev)
RUN npm ci && npm cache clean --force

# Create directories for volume mounts
RUN mkdir -p src dist && chown -R gateway:nodejs /app

# Switch to non-root user
USER gateway

# Expose application and debug ports
EXPOSE 3001 9229

# Use nodemon for hot reload
CMD ["dumb-init", "npm", "run", "dev"]

# =============================================================================
# Production Build Stage
# =============================================================================
FROM base AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Install dev dependencies for build
RUN npm ci && npm cache clean --force

# Copy source code
COPY src/ ./src/

# Build TypeScript
RUN npm run build

# =============================================================================
# Production Stage
# =============================================================================
FROM base AS production

# Copy built application and production dependencies
COPY --from=builder --chown=gateway:nodejs /app/dist ./dist
COPY --from=builder --chown=gateway:nodejs /app/package.json ./
COPY --from=builder --chown=gateway:nodejs /app/node_modules ./node_modules

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:${PORT:-3001}/health || exit 1

# Switch to non-root user
USER gateway

EXPOSE 3001

CMD ["dumb-init", "node", "dist/index.js"]
