# Environment Configuration for Code Agent MVP Local Development
# Copy to .env and customize for your setup

# =============================================================================
# Core Configuration
# =============================================================================

# Developer Identity (unique per developer for multi-dev setups)
DEV_ID=alice

# Logging Level (error, warn, info, debug)
LOG_LEVEL=info

# Environment
NODE_ENV=development

# =============================================================================
# Security & Webhooks
# =============================================================================

# Webhook Secret for HMAC verification (change for production!)
WEBHOOK_SECRET=dev-change-me-secure-secret-here

# CORS Origin for local development
CORS_ORIGIN=*

# =============================================================================
# Azure DevOps Integration
# =============================================================================

# Your ADO Organization and Project
ADO_ORG=your-organization
ADO_PROJECT=your-project

# Personal Access Token with minimal permissions:
# - Code: Read & Write
# - Pull Requests: Read & Write  
# - Project and Team: Read
ADO_TOKEN=your-personal-access-token-here

# =============================================================================
# Rate Limiting & Circuit Breaker
# =============================================================================

# Adapter rate limits
RATE_SOFT_RPS=10
RATE_BURST_RPS=20

# Circuit breaker settings
CIRCUIT_BREAKER_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT=30000

# =============================================================================
# LLM Configuration
# =============================================================================

# LLM Provider: stub, anthropic, openai, local
LLM_PROVIDER=stub

# Anthropic/Claude Configuration
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-3-5-sonnet-20240620

# OpenAI Configuration  
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4

# Local LLM URL (for vLLM, TGI, Ollama, etc.)
LOCAL_LLM_URL=http://localhost:8000/v1

# LLM Limits
PATCH_MAX_BYTES=200000
LLM_TIMEOUT_MS=30000
MAX_FILES_IN_PATCH=50

# =============================================================================
# Orchestrator Configuration
# =============================================================================

# Maximum variants per request
MAX_VARIANTS=5

# Timeout per variant in minutes
VARIANT_TIMEOUT_MINUTES=8

# Maximum patch size in bytes
MAX_PATCH_SIZE_BYTES=200000

# =============================================================================
# Database Configuration (Supabase)
# =============================================================================

# Supabase Cloud Configuration (recommended for local dev)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_KEY=your-service-key

# Local Supabase Configuration (optional, use profile: supabase-local)
SUPABASE_DB_PASSWORD=your-super-secret-and-long-postgres-password

# =============================================================================
# Azure Configuration (for cloud deployment)
# =============================================================================

# Azure Storage (use Azurite locally)
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;

# Application Insights (optional for local dev)
APPINSIGHTS_INSTRUMENTATIONKEY=

# Azure Key Vault (for production secrets)
AZURE_KEY_VAULT_URL=

# =============================================================================
# Optional Features
# =============================================================================

# Enable additional logging
ENABLE_REQUEST_LOGGING=true
ENABLE_PERFORMANCE_METRICS=true

# Mock/Stub mode for offline development
ENABLE_STUB_MODE=false

# =============================================================================
# Multi-Developer Ports (override via docker-compose profiles)
# =============================================================================

# Default ports (alice)
TRAEFIK_HTTP_PORT=80
TRAEFIK_DASHBOARD_PORT=8080
ORCHESTRATOR_PORT=7071
AZURITE_BLOB_PORT=10000
AZURITE_QUEUE_PORT=10001
AZURITE_TABLE_PORT=10002

# Example for second developer (bob):
# TRAEFIK_HTTP_PORT=81
# TRAEFIK_DASHBOARD_PORT=8081  
# ORCHESTRATOR_PORT=7072
# AZURITE_BLOB_PORT=10010
# AZURITE_QUEUE_PORT=10011
# AZURITE_TABLE_PORT=10012
